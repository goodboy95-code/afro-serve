<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ink.afro.mapper.SysDepartmentMapper">

    <resultMap type="ink.afro.entity.SysDepartment" id="SysDepartmentMap">
        <result property="departmentId" column="department_id" jdbcType="INTEGER"/>
        <result property="parentId" column="parent_id" jdbcType="INTEGER"/>
        <result property="ancestors" column="ancestors" jdbcType="VARCHAR"/>
        <result property="departmentName" column="department_name" jdbcType="VARCHAR"/>
        <result property="orderNum" column="order_num" jdbcType="INTEGER"/>
        <result property="leader" column="leader" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="delFlag" column="del_flag" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="abbreviation" column="abbreviation" jdbcType="VARCHAR"/>
    </resultMap>

    <!--新增记录-->
    <insert id="insert" keyProperty="departmentId" useGeneratedKeys="true">
        insert into sys_department(parent_id, ancestors, department_name, order_num, leader, phone, email, status, del_flag,
                             create_by, create_time, update_by, update_time, abbreviation)
        values (#{parentId}, #{ancestors}, #{departmentName}, #{orderNum}, #{leader}, #{phone}, #{email}, #{status},
                #{delFlag}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}, #{abbreviation})
    </insert>

    <!--批量新增记录-->
    <insert id="insertBatch" keyProperty="departmentId" useGeneratedKeys="true">
        insert into sys_department(parent_id, ancestors, department_name, order_num, leader, phone, email, status, del_flag,
        create_by, create_time, update_by, update_time, abbreviation)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.parentId}, #{entity.ancestors}, #{entity.departmentName}, #{entity.orderNum}, #{entity.leader},
            #{entity.phone}, #{entity.email}, #{entity.status}, #{entity.delFlag}, #{entity.createBy},
            #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.abbreviation})
        </foreach>
    </insert>

    <!--批量新增或更新记录-->
    <insert id="insertOrUpdateBatch" keyProperty="departmentId" useGeneratedKeys="true">
        insert into sys_department(parent_id, ancestors, department_name, order_num, leader, phone, email, status, del_flag,
        create_by, create_time, update_by, update_time, abbreviation)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.parentId}, #{entity.ancestors}, #{entity.departmentName}, #{entity.orderNum}, #{entity.leader},
            #{entity.phone}, #{entity.email}, #{entity.status}, #{entity.delFlag}, #{entity.createBy},
            #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.abbreviation})
        </foreach>
        on duplicate key update
        parent_id = values(parent_id),
        ancestors = values(ancestors),
        department_name = values(department_name),
        order_num = values(order_num),
        leader = values(leader),
        phone = values(phone),
        email = values(email),
        status = values(status),
        del_flag = values(del_flag),
        create_by = values(create_by),
        create_time = values(create_time),
        update_by = values(update_by),
        update_time = values(update_time),
        abbreviation = values(abbreviation)
    </insert>

    <!--通过主键删除记录-->
    <delete id="deleteById">
        delete
        from sys_department
        where department_id = #{departmentId}
    </delete>

    <!--通过主键修改记录-->
    <update id="update">
        update sys_department
        <set>
            <if test="parentId != null">
                parent_id = #{parentId},
            </if>
            <if test="ancestors != null and ancestors != ''">
                ancestors = #{ancestors},
            </if>
            <if test="departmentName != null and departmentName != ''">
                department_name = #{departmentName},
            </if>
            <if test="orderNum != null">
                order_num = #{orderNum},
            </if>
            <if test="leader != null and leader != ''">
                leader = #{leader},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="delFlag != null and delFlag != ''">
                del_flag = #{delFlag},
            </if>
            <if test="createBy != null and createBy != ''">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="abbreviation != null and abbreviation != ''">
                abbreviation = #{abbreviation},
            </if>
        </set>
        where department_id = #{departmentId}
    </update>

    <!--通过主键查询单个记录-->
    <select id="queryById" resultMap="SysDepartmentMap">
        select department_id,
               parent_id,
               ancestors,
               department_name,
               order_num,
               leader,
               phone,
               email,
               status,
               del_flag,
               create_by,
               create_time,
               update_by,
               update_time,
               abbreviation
        from sys_department
        where department_id = #{departmentId}
    </select>

    <!--通过sysDepartmentName查询单个记录-->
    <select id="queryByName" resultMap="SysDepartmentMap">
        select department_id,
               parent_id,
               ancestors,
               department_name,
               order_num,
               leader,
               phone,
               email,
               status,
               del_flag,
               create_by,
               create_time,
               update_by,
               update_time,
               abbreviation
        from sys_department
        where department_name = #{departmentName}
    </select>

    <!--查询所有记录-->
    <select id="queryAll" resultMap="SysDepartmentMap">
        select department_id,
               parent_id,
               ancestors,
               department_name,
               order_num,
               leader,
               phone,
               email,
               status,
               del_flag,
               create_by,
               create_time,
               update_by,
               update_time,
               abbreviation
        from sys_department
        where del_flag = 0
          and status = 0
        order by department_id
    </select>

    <!--查询指定行记录-->
    <select id="queryAllByLimit" resultMap="SysDepartmentMap">
        select
        department_id, parent_id, ancestors, department_name, order_num, leader, phone, email, status, del_flag, create_by,
        create_time, update_by, update_time, abbreviation
        from sys_department
        <where>
            <if test="sysDepartment.departmentId != null">
                and department_id = #{sysDepartment.departmentId}
            </if>
            <if test="sysDepartment.parentId != null">
                and parent_id = #{sysDepartment.parentId}
            </if>
            <if test="sysDepartment.ancestors != null and sysDepartment.ancestors != ''">
                and ancestors = #{sysDepartment.ancestors}
            </if>
            <if test="sysDepartment.departmentName != null and sysDepartment.departmentName != ''">
                and department_name = #{sysDepartment.departmentName}
            </if>
            <if test="sysDepartment.orderNum != null">
                and order_num = #{sysDepartment.orderNum}
            </if>
            <if test="sysDepartment.leader != null and sysDepartment.leader != ''">
                and leader = #{sysDepartment.leader}
            </if>
            <if test="sysDepartment.phone != null and sysDepartment.phone != ''">
                and phone = #{sysDepartment.phone}
            </if>
            <if test="sysDepartment.email != null and sysDepartment.email != ''">
                and email = #{sysDepartment.email}
            </if>
            <if test="sysDepartment.status != null and sysDepartment.status != ''">
                and status = #{sysDepartment.status}
            </if>
            <if test="sysDepartment.delFlag != null and sysDepartment.delFlag != ''">
                and del_flag = #{sysDepartment.delFlag}
            </if>
            <if test="sysDepartment.createBy != null and sysDepartment.createBy != ''">
                and create_by = #{sysDepartment.createBy}
            </if>
            <if test="sysDepartment.createTime != null">
                and create_time = #{sysDepartment.createTime}
            </if>
            <if test="sysDepartment.updateBy != null and sysDepartment.updateBy != ''">
                and update_by = #{sysDepartment.updateBy}
            </if>
            <if test="sysDepartment.updateTime != null">
                and update_time = #{sysDepartment.updateTime}
            </if>
            <if test="sysDepartment.abbreviation != null and sysDepartment.abbreviation != ''">
                and abbreviation = #{sysDepartment.abbreviation}
            </if>
        </where>
        order by department_id
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from sys_department
        <where>
            <if test="departmentId != null">
                and department_id = #{departmentId}
            </if>
            <if test="parentId != null">
                and parent_id = #{parentId}
            </if>
            <if test="ancestors != null and ancestors != ''">
                and ancestors = #{ancestors}
            </if>
            <if test="departmentName != null and departmentName != ''">
                and department_name = #{departmentName}
            </if>
            <if test="orderNum != null">
                and order_num = #{orderNum}
            </if>
            <if test="leader != null and leader != ''">
                and leader = #{leader}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="delFlag != null and delFlag != ''">
                and del_flag = #{delFlag}
            </if>
            <if test="createBy != null and createBy != ''">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateBy != null and updateBy != ''">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="abbreviation != null and abbreviation != ''">
                and abbreviation = #{abbreviation}
            </if>
        </where>
    </select>

    <select id="queryByRoleId" resultMap="SysDepartmentMap">
        select *
        from sys_department d
                 join sys_role_department rd on d.department_id = rd.department_id
        where d.del_flag = 0
          and d.status = 0
          and rd.role_id = #{roleId}
        order by d.department_id
    </select>
</mapper>

