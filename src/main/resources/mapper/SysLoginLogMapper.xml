<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ink.afro.mapper.SysLoginLogMapper">

    <resultMap type="ink.afro.entity.SysLoginLog" id="SysLoginLogMap">
        <result property="loginLogId" column="login_log_id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="ipAddress" column="ip_address" jdbcType="VARCHAR"/>
        <result property="loginLocation" column="login_location" jdbcType="VARCHAR"/>
        <result property="browser" column="browser" jdbcType="VARCHAR"/>
        <result property="os" column="os" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="msg" column="msg" jdbcType="VARCHAR"/>
        <result property="loginTime" column="login_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--新增记录-->
    <insert id="insert" keyProperty="loginLogId" useGeneratedKeys="true">
        insert into sys_login_log(user_name, ip_address, login_location, browser, os, status, msg, login_time)
        values (#{userName}, #{ipAddress}, #{loginLocation}, #{browser}, #{os}, #{status}, #{msg}, #{loginTime})
    </insert>

    <!--批量新增记录-->
    <insert id="insertBatch" keyProperty="loginLogId" useGeneratedKeys="true">
        insert into sys_login_log(user_name, ip_address, login_location, browser, os, status, msg, login_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userName}, #{entity.ipAddress}, #{entity.loginLocation}, #{entity.browser}, #{entity.os},
            #{entity.status}, #{entity.msg}, #{entity.loginTime})
        </foreach>
    </insert>

    <!--批量新增或更新记录-->
    <insert id="insertOrUpdateBatch" keyProperty="loginLogId" useGeneratedKeys="true">
        insert into sys_login_log(user_name, ip_address, login_location, browser, os, status, msg, login_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userName}, #{entity.ipAddress}, #{entity.loginLocation}, #{entity.browser}, #{entity.os},
            #{entity.status}, #{entity.msg}, #{entity.loginTime})
        </foreach>
        on duplicate key update
        user_name = values(user_name),
        ip_address = values(ip_address),
        login_location = values(login_location),
        browser = values(browser),
        os = values(os),
        status = values(status),
        msg = values(msg),
        login_time = values(login_time)
    </insert>

    <!--通过主键删除记录-->
    <delete id="deleteById">
        delete
        from sys_login_log
        where login_log_id = #{loginLogId}
    </delete>

    <!--通过主键列表删除记录-->
    <delete id="deleteBatch">
        delete from sys_login_log where login_log_id in
        <foreach collection="loginLogIds" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <delete id="deleteAll">
        delete from sys_login_log
    </delete>

    <!--通过主键修改记录-->
    <update id="update">
        update sys_login_log
        <set>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="ipAddress != null and ipAddress != ''">
                ip_address = #{ipAddress},
            </if>
            <if test="loginLocation != null and loginLocation != ''">
                login_location = #{loginLocation},
            </if>
            <if test="browser != null and browser != ''">
                browser = #{browser},
            </if>
            <if test="os != null and os != ''">
                os = #{os},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="msg != null and msg != ''">
                msg = #{msg},
            </if>
            <if test="loginTime != null">
                login_time = #{loginTime},
            </if>
        </set>
        where login_log_id = #{loginLogId}
    </update>

    <!--通过主键查询单个记录-->
    <select id="queryById" resultMap="SysLoginLogMap">
        select login_log_id,
               user_name,
               ip_address,
               login_location,
               browser,
               os,
               status,
               msg,
               login_time
        from sys_login_log
        where login_log_id = #{loginLogId}
    </select>

    <!--查询所有记录-->
    <select id="queryAll" resultMap="SysLoginLogMap">
        select login_log_id,
               user_name,
               ip_address,
               login_location,
               browser,
               os,
               status,
               msg,
               login_time
        from sys_login_log
    </select>

    <!--查询指定行记录-->
    <select id="queryAllByLimit" resultMap="SysLoginLogMap">
        select
        login_log_id, user_name, ip_address, login_location, browser, os, status, msg, login_time
        from sys_login_log
        <where>
            <if test="sysLoginLog.loginLogId != null">
                and login_log_id = #{sysLoginLog.loginLogId}
            </if>
            <if test="sysLoginLog.userName != null and sysLoginLog.userName != ''">
                and user_name = #{sysLoginLog.userName}
            </if>
            <if test="sysLoginLog.ipAddress != null and sysLoginLog.ipAddress != ''">
                and ip_address = #{sysLoginLog.ipAddress}
            </if>
            <if test="sysLoginLog.loginLocation != null and sysLoginLog.loginLocation != ''">
                and login_location = #{sysLoginLog.loginLocation}
            </if>
            <if test="sysLoginLog.browser != null and sysLoginLog.browser != ''">
                and browser = #{sysLoginLog.browser}
            </if>
            <if test="sysLoginLog.os != null and sysLoginLog.os != ''">
                and os = #{sysLoginLog.os}
            </if>
            <if test="sysLoginLog.status != null and sysLoginLog.status != ''">
                and status = #{sysLoginLog.status}
            </if>
            <if test="sysLoginLog.msg != null and sysLoginLog.msg != ''">
                and msg = #{sysLoginLog.msg}
            </if>
            <if test="sysLoginLog.beginLoginLogTime != null and sysLoginLog.endLoginLogTime!=null"><!-- 开始时间检索 -->
                and login_time between #{sysLoginLog.beginLoginLogTime} and #{sysLoginLog.endLoginLogTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from sys_login_log
        <where>
            <if test="loginLogId != null">
                and login_log_id = #{loginLogId}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="ipAddress != null and ipAddress != ''">
                and ip_address = #{ipAddress}
            </if>
            <if test="loginLocation != null and loginLocation != ''">
                and login_location = #{loginLocation}
            </if>
            <if test="browser != null and browser != ''">
                and browser = #{browser}
            </if>
            <if test="os != null and os != ''">
                and os = #{os}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="msg != null and msg != ''">
                and msg = #{msg}
            </if>
            <if test="beginLoginLogTime != null and endLoginLogTime!=null"><!-- 开始时间检索 -->
                and login_time between #{beginLoginLogTime} and #{endLoginLogTime}
            </if>
        </where>
    </select>
</mapper>

